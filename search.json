[{"path":"https://clstacy.github.io/ordinalMIC/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 ordinalMIC authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carson Stacy. Author, maintainer.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stacy C (2025). ordinalMIC: Minimum Inhibitory Concentration Estimation Ordinal Regression Models. R package version 1.0.0, https://clstacy.github.io/ordinalMIC/.","code":"@Manual{,   title = {ordinalMIC: Minimum Inhibitory Concentration Estimation from Ordinal Regression Models},   author = {Carson Stacy},   year = {2025},   note = {R package version 1.0.0},   url = {https://clstacy.github.io/ordinalMIC/}, }"},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"ordinalmic","dir":"","previous_headings":"","what":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"Minimum Inhibitory Concentration (MIC*) Estimation groupwise comparisons proportional-odds ordinal regression models. Package website: https://clstacy.github.io/ordinalMIC/ Companion Website: https://LewisLabUARK.github.io/MICalculator/","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"Microbiological assays often record growth ordered score scale (e.g., 0–4) across concentrations. Treating scores binary continuous can lead inaccurate conclusions. ordinalMIC turns cumulative-link models (ordinal::clm) interpretable concentration-scale summaries: MIC* per group (concentration predicted probability “growth” 50%) Δ-MIC* (additive differences) MIC* ratio (fold-change) Difference--differences (DoD) additive ratio scales test interactions also provides compact output tables, ggplot2::autoplot() quick figures generation.","code":""},{"path":[]},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"stable-from-r-universe","dir":"","previous_headings":"Installation","what":"Stable (from r-universe)","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"","code":"install.packages(\"ordinalMIC\", repos = c(\"https://clstacy.r-universe.dev\"))"},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"from-source-tarball","dir":"","previous_headings":"Installation","what":"From source tarball","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"","code":"install.packages(\"ordinalMIC_1.0.0.tar.gz\", repos = NULL, type = \"source\")"},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"Required: ggplot2, stats, utils, cli, tibble, R (>= 4.1) Suggested: ordinal modeling","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"core-idea","dir":"","previous_headings":"","what":"Core Idea","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"Fit proportional-odds ordinal regression scored outcomes across concentration. use mic_solve() : Compute group-specific MIC* original concentration scale (using chosen transform/inverse). Compare groups ΔMIC* MIC ratios CIs p-values. Test interactions via difference--differences (additive ratio scales). Default transform log1p concentration; override model uses different link-side transform.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"","code":"library(ordinalMIC)  # Example data included with the package data(yeast_df)  # Fit a proportional-odds model (requires 'ordinal' package) fit <- ordinal::clm(score ~ strain * treatment + log1p(conc), data = yeast_df)  # Estimate MIC* and compare groups res <- mic_solve(   clm_fit    = fit,   conc_name  = \"conc\",   transform_fun     = log1p,   inv_transform_fun = expm1,   alpha      = 0.05,   compare_pairs = \"all\" )  # Tables head(tidy.mic_solve(res, table = \"mic\")) head(tidy.mic_solve(res, table = \"ratio\"))  # Plots ggplot2::autoplot(res, type = \"mic\")"},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"main-functions","dir":"","previous_headings":"","what":"Main functions","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"mic_solve() Inputs: fitted ordinal::clm, newdata, conc_name, transform/inverse functions Outputs: MICs, Δ-MIC, ratios, DoD summaries, CIs p-values ggplot2::autoplot.mic_solve() Quick visualization MICs, Δ-MICs, ratios, DoDs tidy.mic_solve() Extracts summary tables MICs, Δ-MICs, ratios, DoDs tibble objects","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"Example dataset yeast_df included package:","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"modeling-guidance","dir":"","previous_headings":"","what":"Modeling guidance","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"Outcome must ordered factor levels increasing severity Transform concentration (default log1p); supply transform inverse newdata gives groups estimate MIC*, automatically generated given. Use DoD (Difference Difference) summaries interpret interaction effects MIC*","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"mic-definition","dir":"","previous_headings":"","what":"MIC definition","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"MIC concentration predicted probability “growth” equals 0.5, computed fitted clm. MIC ratios: differences predicted log-MIC DoD ratios: ratio--ratios (interaction log scale)","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"Outcome ordered: convert ordered() Transform mismatch: supply correct transform/inverse Estimate MIC: reconsider dose range (censored results/change observed) Comparisons: restrict compare_pairs = \"share_any\"","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"use ordinalMIC published research, please cite: Stacy C (2025). ordinalMIC: Minimum Inhibitory Concentration Estimation Ordinal Regression Models. R package version 1.0.0, https://clstacy.github.io/ordinalMIC/.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"Issues/PRs: https://github.com/clstacy/ordinalMIC/ Include sessionInfo() minimal example bug reports","code":""},{"path":"https://clstacy.github.io/ordinalMIC/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Minimum Inhibitory Concentration Estimation from Ordinal Regression Models","text":"MIT License. See LICENSE file details.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/autoplot.mic_solve.html","id":null,"dir":"Reference","previous_headings":"","what":"autoplot method for mic_solve objects — autoplot.mic_solve","title":"autoplot method for mic_solve objects — autoplot.mic_solve","text":"Quick ggplot2 visualisations main outputs mic_solve().  Three panels supported: \"mic\"   - forest plot group-wise MIC estimates asymmetric CIs. \"delta\" - forest plot deltaMIC pairwise differences. \"ratio\" - forest plot MIC ratios (log scale).","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/autoplot.mic_solve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoplot method for mic_solve objects — autoplot.mic_solve","text":"","code":"# S3 method for class 'mic_solve' autoplot(   object,   type = c(\"mic\", \"delta\", \"ratio\", \"DoD_delta\", \"DoD_ratio\"),   x = NULL,   color_by = NULL,   dot_size = 0.5,   ... )"},{"path":"https://clstacy.github.io/ordinalMIC/reference/autoplot.mic_solve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoplot method for mic_solve objects — autoplot.mic_solve","text":"object object returned mic_solve(). type One \"mic\", \"delta\", \"ratio\", \"DoD_delta\", \"DoD_ratio\". x Variable x axis plotting color_by Optional column name used color dodge replicate points. Default: first column newdata. dot_size Size dots dotplot. Default: 0.5. ... Additional arguments passed ggplot2::ggplot().","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/autoplot.mic_solve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoplot method for mic_solve objects — autoplot.mic_solve","text":"ggplot object.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/autoplot.mic_solve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"autoplot method for mic_solve objects — autoplot.mic_solve","text":"Carson Stacy","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/autoplot.mic_solve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"autoplot method for mic_solve objects — autoplot.mic_solve","text":"","code":"if (requireNamespace(\"ordinal\", quietly = TRUE) &&     requireNamespace(\"ggplot2\", quietly = TRUE)) {   df <- data.frame(score  = ordered(sample(0:4, 120, TRUE)),                    conc   = runif(120, 0, 4),                    strain = factor(sample(c(\"A\",\"B\"), 120, TRUE)))   fit <- ordinal::clm(score ~ strain * log1p(conc), data = df)   res <- mic_solve(fit, expand.grid(strain = levels(df$strain)),                    conc_name = \"conc\")   ggplot2::autoplot(res, type = \"mic\") } #> Warning: NaNs produced"},{"path":"https://clstacy.github.io/ordinalMIC/reference/mic_solve.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate MICs and Compare Groups — mic_solve","title":"Estimate MICs and Compare Groups — mic_solve","text":"High‑level wrapper returns: delta_mic_results – additive pairwise differences (Δ‑MIC). ratio_mic_results – multiplicative pairwise ratios. dod_ratio_results – difference‑‑differences ratio scale (ratio‑‑ratios, classic interaction log scale). dod_delta_results – difference‑‑differences additive scale (Δ Δs).","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/mic_solve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate MICs and Compare Groups — mic_solve","text":"","code":"mic_solve(   clm_fit,   newdata = NULL,   conc_name,   transform_fun = log1p,   inv_transform_fun = expm1,   alpha = 0.05,   compare_pairs = \"all\",   pvalue_scale = c(\"lp\", \"logmic\") )"},{"path":"https://clstacy.github.io/ordinalMIC/reference/mic_solve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate MICs and Compare Groups — mic_solve","text":"clm_fit Fitted object ordinal::clm(). newdata Data frame factor combinations evaluate. conc_name Character string giving raw concentration column. transform_fun Transformation used model (default log1p). inv_transform_fun Inverse transformation (default expm1). alpha Confidence‑level significance (default 0.05). compare_pairs One \"\" (default) retain every pairwise comparison, \"share_any\" exclude contrasts two groups share covariate levels newdata. pvalue_scale pivot main P_value uses pairwise tests: \"lp\" (difference lp = log1p(MIC), recommended calibration) \"logmic\" (current Wald log(MIC) ratios MIC scale deltas).","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/mic_solve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate MICs and Compare Groups — mic_solve","text":"object class \"mic_solve\" containing tables plus mic_estimates.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/mic_solve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate MICs and Compare Groups — mic_solve","text":"","code":"if (requireNamespace(\"ordinal\", quietly = TRUE)) {   ## Toy ordinal dataset   set.seed(1)   fit <- ordinal::clm(score ~ strain * treatment + log1p(conc), data = yeast_df)   res <- mic_solve(fit, conc_name = \"conc\")   head(res$ratio_mic_results) } #>     Group1   Group2 Ratio_MIC log2Ratio_MIC SE_log2Ratio    CI_Lower #> 1  WT:None Mut:None 0.8344990    -0.2610177    0.1252559 -0.50651481 #> 2  WT:None  WT:Salt 1.6783666     0.7470579    0.1062585  0.53879510 #> 3  WT:None Mut:Salt 0.9616983    -0.0563437    0.1174861 -0.28661220 #> 4 Mut:None  WT:Salt 2.0112266     1.0080756    0.1176926  0.77740239 #> 5 Mut:None Mut:Salt 1.1524259     0.2046740    0.1277369 -0.04568565 #> 6  WT:Salt Mut:Salt 0.5729966    -0.8034016    0.1089813 -1.01700093 #>      CI_Upper      P_value #> 1 -0.01552064 3.634335e-02 #> 2  0.95532068 1.564368e-12 #> 3  0.17392479 6.313981e-01 #> 4  1.23874884 1.903759e-18 #> 5  0.45503369 1.083454e-01 #> 6 -0.58980227 9.204372e-14"},{"path":"https://clstacy.github.io/ordinalMIC/reference/tidy.mic_solve.html","id":null,"dir":"Reference","previous_headings":"","what":"tidy method for mic_solve objects — tidy.mic_solve","title":"tidy method for mic_solve objects — tidy.mic_solve","text":"tidy method mic_solve objects","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/tidy.mic_solve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tidy method for mic_solve objects — tidy.mic_solve","text":"","code":"tidy.mic_solve(   x,   table = c(\"mic\", \"delta\", \"ratio\", \"DoD_delta\", \"DoD_ratio\"),   ... )"},{"path":"https://clstacy.github.io/ordinalMIC/reference/tidy.mic_solve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tidy method for mic_solve objects — tidy.mic_solve","text":"x object class mic_solve. table character string specifying table return. Options \"mic\", \"delta\", \"ratio\", \"DoD_delta\", \"DoD_ratio\". ... Additional arguments (used).","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/tidy.mic_solve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tidy method for mic_solve objects — tidy.mic_solve","text":"tibble containing requested table mic_solve object.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/yeast_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Yeast Stress-Survival Data — yeast_df","title":"Simulated Yeast Stress-Survival Data — yeast_df","text":"example dataset ordinal spot scores (0 = growth … 4 = full growth) treated untreated wild-type mutant yeast across peroxide gradient.","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/yeast_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Yeast Stress-Survival Data — yeast_df","text":"","code":"data(yeast_df)"},{"path":"https://clstacy.github.io/ordinalMIC/reference/yeast_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Yeast Stress-Survival Data — yeast_df","text":"data frame 132 rows 4 variables: score Ordered factor 0 < 1 < 2 < 3 < 4 conc Numeric concentration units strain Factor: \"WT\" \"Mut\" treatment Factor: \"None\" \"Salt\" rep Replicate id (integer)","code":""},{"path":"https://clstacy.github.io/ordinalMIC/reference/yeast_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Yeast Stress-Survival Data — yeast_df","text":"","code":"data(yeast_df) head(yeast_df) #>   strain treatment conc rep score #> 1     WT      None  0.0   1     4 #> 2    Mut      None  0.0   1     4 #> 3     WT      Salt  0.0   1     4 #> 4    Mut      Salt  0.0   1     4 #> 5     WT      None  0.4   1     3 #> 6    Mut      None  0.4   1     3"}]
